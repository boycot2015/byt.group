---
import {
	KContainer,
	KHeader,
	KMain,
	KAside,
	KFooter,
	KButton,
	KBacktop,
	KAffix,
} from "@ikun-ui/core";
// import { ElAffix, ElButton} from 'element-plus';
import PlayListDetail from "@/components/music/playlist/detail.tsx";
import { KIcon } from "@ikun-ui/icon";
import Aside from "./Aside.vue";
import Search from "@/components/Search";
import Lyric from "@/components/music/player/lyric.tsx";
import Player from "@/components/music/player/index.svelte";
import Cover from "@/components/music/cover/index.tsx";
import Nav from "@/components/Nav/index.vue";
import config from "@/config";
import "virtual:uno.css";
import "element-plus/dist/index.css";
import "@/assets/less/index.less";
interface Props {
	title: string;
	activePath?: string;
	className?: string;
}
type ScrollTarget = Window | Document | HTMLElement;
const { title, className } = Astro.props;
const { type } = Astro.params;
const { url } = Astro;
const getstyles = () => {
	return url.pathname.split("/").includes("music") ||
		url.pathname == "/" ||
		url.pathname.split("/").includes("micro")
		? "!w-full"
		: "md:right-[--gap]";
};
---

<!doctype html>
<html lang="zh-cn">
	<head>
		<meta charset="utf-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<meta name="generator" content={Astro.generator} />
		<link rel="icon" type="image/svg+xml" href="/favicon.ico" />
		<link rel="sitemap" href="/sitemap-index.xml" />
		<link href="/css/base.css" />
		<title>{title}</title>
	</head>
	<body>
		<KContainer cls={"main"}>
			<KContainer cls="relative !overflow-hidden h-full bg-[transparent]">
				<KAside
					cls="text-center hidden !md:flex leading-60px !drop-shadow-[36px_0px_36px_rgba(0,0,0,0.5)] bg-[rgba(255,255,255,0.6)] backdrop-blur-md relative"
				>
					<Aside
						client:visible
						props={Astro.props}
						params={Astro.params}
						routerPath={url.pathname}
					/>
				</KAside>
				<KContainer cls="relative">
					<KHeader
						slot="header"
						cls=`text-left flex items-center left-[auto] ${getstyles()} 3xl:right-[auto] justify-start !drop-shadow-[0_35px_35px_rgba(0,0,0,0.5)] bg-[rgba(255,255,255,0.6)] h-[60px] leading-40px backdrop-blur-md lg:w-[calc(100vw-80px)] xl:w-[calc(100vw-135px)] !z-100 md:pl-[32px] w-full lg:absolute sticky`
					>
						<div
							class="navgator justify-center mr-5 hidden md:flex"
						>
							<KButton
								type="main"
								cls="mr-2 go-back pl-0 border-none bg-[transparent]"
								ghost
							>
								<KIcon
									icon="i-carbon-arrow-left text-color-[var(--color-primary)"
									size={16}
								/>
							</KButton>
							<KButton
								type="main"
								cls="mr-2 go-forward border-none bg-[transparent]"
								ghost
							>
								<KIcon
									icon="i-carbon-arrow-right text-color-[var(--color-primary)"
									size={16}
								/>
							</KButton>
							<KButton
								type="main"
								cls="go-reload border-none bg-[transparent]"
								ghost
							>
								<KIcon
									icon="i-carbon-renew text-color-[var(--color-primary)"
									size={16}
								/>
							</KButton>
						</div>
						<h3 class="hidden flex-1 text-[16px] md:block">
							{title}
						</h3>
						{
							(
								<Lyric
									key="KHeader-Lyric"
									client:only="react"
									className="flex-1 px-2 line-clamp-1 hidden lg:block"
								/>
							)
						}
						<Search
							type={type}
							className="w-full my-3 md:my-0 md:w-[auto]"
							client:only="react"
						/>
					</KHeader>
					<KMain
						cls={"text-center main-scroll-wrap bg-[rgba(255,255,255,.5)] lg:pt-[80px] realtive overflow-hidden mb-[60px] w-[100%] mx-0 overflow-y-auto " +
							(className || "")}
					>
						<slot />
						<KBacktop
							cls="shadow-none w-[2.5rem] h-[2.5rem] text-color-white bg-[var(--color-primary)] !right-[20px] !md:right-[50px]"
							client:only="svelte"
							bottom={80}
							showHeight={50}
							target=".main-scroll-wrap"
						/>
					</KMain>
					<KAffix
						class="k-affix k-affix--affixed md:hidden z-999 bottom-[140px] right-[20px]"
						client:visible
						triggerBottom={0}
					>
						<div
							class="nav md:hidden rounded-full bg-[var(--color-primary)] z-index-99999"
						>
							<Nav client:only="vue" />
						</div>
					</KAffix>
				</KContainer>
			</KContainer>
			<KFooter
				slot="footer"
				cls="z-101 relative text-center p-0 bg-[rgba(255,255,255,0.6)] drop-shadow-[0_-35px_35px_rgba(0,0,0,0.5)] backdrop-blur-md leading-24px md:leading-60px"
			>
				<Player client:visible>
					<Cover slot="cover" client:only="react" />
					<PlayListDetail
						slot="playlist"
						simple={true}
						client:only="react"
						{type}
					/>
					<Lyric
						key="Player-Lyric"
						slot="lyric"
						className="w-[55%] md:hidden"
						client:only="react"
					/>
				</Player>
			</KFooter>
		</KContainer>
	</body>
</html>
<script is:inline>
	var _hmt = _hmt || [];
	(function () {
		var hm = document.createElement("script");
		hm.src = "https://hm.baidu.com/hm.js?a8df6f60267843325042be0c69d2f328";
		var s = document.getElementsByTagName("script")[0];
		s.parentNode.insertBefore(hm, s);
	})();
</script>
<script define:vars={{ config }}>
	let str = window.localStorage.getItem("config");
	Object.assign(config, JSON.parse(str));
	document.body.style.background = `url(${config.bgUrl}) center/cover no-repeat`;
</script>
<script is:inline>
	window.addEventListener("load", () => {
		document.querySelector(".go-back").onclick = () => {
			window.history.back();
		};
		// document.querySelector('.go-home').onclick = () => {
		// 	window.location.href = '/'
		// }
		document.querySelector(".go-forward").onclick = () => {
			window.history.forward();
		};
		document.querySelector(".go-reload").onclick = () => {
			window.location.reload();
		};
	});
</script>
<style lang="less" scoped>
	// eslint-disable astro/no-unused-css-selector
	body {
		height: 100%;
		padding: 0;
		margin: 0;
	}
	.k-container {
		height: 100vh;
		overflow: hidden;
		.k-container {
			overflow: auto;
		}
	}
</style>
